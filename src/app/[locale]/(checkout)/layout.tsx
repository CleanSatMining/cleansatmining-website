import Footer from '@/app/_shared/_components/_mainLayout/Footer'
import Main from '@/app/_shared/_components/_mainLayout/Main'
import Box from '@/app/_shared/_components/_utils/Box'
import { intlFormats } from '@/app/_shared/_format/format'
import { getActiveOrderLite } from '@/app/_shared/_services/_order/getActiveOrder'
import '@/app/globals.css'
import { ApolloWrapper } from '@/config/ApolloProvider'
import { AuthProvider } from '@/config/AuthProvider'
import { Order } from '@/graphql/common/generated-types'
import type { Metadata } from 'next'
import { NextIntlClientProvider, useLocale } from 'next-intl'
import { Cairo, Poppins } from 'next/font/google'
import { notFound } from 'next/navigation'
import CheckoutHeader from '../../_shared/_components/_checkout/layout/Header'

const poppins = Poppins({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-poppins',
  weight: ['300', '400', '600', '700'],
})

const cairo = Cairo({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-cairo',
  weight: ['400', '600', '700', '800'],
})

export const metadata: Metadata = {
  title: 'Panier - Realt CSM',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode
  params: { locale: string }
}) {
  const locale = useLocale()
  let messages
  try {
    messages = (await import(`@/../messages/${locale}.json`)).default
  } catch (error) {
    notFound()
  }

  if (params.locale !== locale) {
    notFound()
  }

  const activeOrder: Order = await getActiveOrderLite()
  // TODO : Voir comment faire si pas d'activeOrder => on redirige vers une autre page OU layout diffÃ©rent

  return (
    <html
      lang={locale}
      className={`h-full dark ${poppins.variable} ${cairo.variable}`}
    >
      <body className="flex min-h-screen flex-col dark:bg-grey-600 dark:text-white">
        <ApolloWrapper>
          <NextIntlClientProvider
            locale={locale}
            messages={messages}
            formats={intlFormats}
          >
            <AuthProvider>
              <CheckoutHeader activeOrder={activeOrder} />
              <Main>
                <Box className="flex flex-col gap-7 p-4 xl:gap-14 xl:p-9">
                  {children}
                </Box>
              </Main>
              <Footer />
            </AuthProvider>
          </NextIntlClientProvider>
        </ApolloWrapper>
      </body>
    </html>
  )
}
